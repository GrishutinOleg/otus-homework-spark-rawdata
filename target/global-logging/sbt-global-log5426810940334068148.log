[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\09581\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\09581\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.7.1 (Oracle Corporation Java 11.0.15)
[debug]       Load.loadUnit: plugins took 112.813ms
[debug]       Load.loadUnit: defsScala took 0.3573ms
[debug] [Loading] Scanning directory C:\Users\09581\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\09581\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 23.9635 ms
[debug]           Load.resolveProject(global-plugins) took 66.1456ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\09581\.sbt\1.0\plugins, plugins: List(<none>))) took 127.293ms
[debug] [Loading] Done in C:\Users\09581\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 152.4687ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2736ms
[debug]     Load.loadUnit(file:/C:/Users/09581/.sbt/1.0/plugins/, ...) took 276.6361ms
[debug]   Load.apply: load took 517.2216ms
[debug]   Load.apply: resolveProjects took 8.9061ms
[debug]   Load.apply: finalTransforms took 86.4782ms
[debug]   Load.apply: config.delegates took 10.0575ms
[debug]   Load.apply: Def.make(settings)... took 548.7733ms
[debug]   Load.apply: structureIndex took 114.4148ms
[debug]   Load.apply: mkStreams took 2.2026ms
[info] loading global plugins from C:\Users\09581\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4862.0008ms
[debug]           Load.loadUnit: plugins took 26.7561ms
[debug]           Load.loadUnit: defsScala took 0.0027ms
[debug] [Loading] Scanning directory C:\otus_spark_developer\otus-homework-spark-rawdata\project
[debug]             Load.loadUnit: mkEval took 7.5427ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\otus_spark_developer\otus-homework-spark-rawdata\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.0586 ms
[info] loading settings for project otus-homework-spark-rawdata-build from idea.sbt ...
[debug]               Load.resolveProject(otus-homework-spark-rawdata-build) took 2.613ms
[debug]             Load.loadTransitive: finalizeProject(Project(id otus-homework-spark-rawdata-build, base: C:\otus_spark_developer\otus-homework-spark-rawdata\project, plugins: List(<none>))) took 6.2039ms
[debug] [Loading] Done in C:\otus_spark_developer\otus-homework-spark-rawdata\project, returning: (otus-homework-spark-rawdata-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2192.3351ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.6897ms
[debug]         Load.loadUnit(file:/C:/otus_spark_developer/otus-homework-spark-rawdata/project/, ...) took 2223.6742ms
[debug]       Load.apply: load took 2225.1666ms
[debug]       Load.apply: resolveProjects took 0.1107ms
[debug]       Load.apply: finalTransforms took 12.8419ms
[debug]       Load.apply: config.delegates took 0.828ms
[debug]       Load.apply: Def.make(settings)... took 102.6111ms
[debug]       Load.apply: structureIndex took 34.9139ms
[debug]       Load.apply: mkStreams took 0.0036ms
[info] loading project definition from C:\otus_spark_developer\otus-homework-spark-rawdata\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 4872.0191ms
[debug]     Load.loadUnit: defsScala took 0.0027ms
[debug] [Loading] Scanning directory C:\otus_spark_developer\otus-homework-spark-rawdata
[debug]       Load.loadUnit: mkEval took 0.2378ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.2074 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 51.5586ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\otus_spark_developer\otus-homework-spark-rawdata, plugins: List(<none>))) took 57.1311ms
[debug] [Loading] Done in C:\otus_spark_developer\otus-homework-spark-rawdata, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1357.3745ms
[debug]     Load.loadUnit: cleanEvalClasses took 11.0606ms
[debug]   Load.loadUnit(file:/C:/otus_spark_developer/otus-homework-spark-rawdata/, ...) took 6241.1065ms
[debug] Load.apply: load took 6242.8653ms
[debug] Load.apply: resolveProjects took 0.1286ms
[debug] Load.apply: finalTransforms took 26.7247ms
[debug] Load.apply: config.delegates took 0.3343ms
[debug] Load.apply: Def.make(settings)... took 66.53ms
[debug] Load.apply: structureIndex took 22.133ms
[debug] Load.apply: mkStreams took 0.005ms
[info] set current project to otus-homework-spark-rawdata (in build file:/C:/otus_spark_developer/otus-homework-spark-rawdata/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 56518 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 56518, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to otus-homework-spark-rawdata (in build file:/C:/otus_spark_developer/otus-homework-spark-rawdata/)
[debug] > Exec(idea-shell, None, None)
